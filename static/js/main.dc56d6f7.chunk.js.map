{"version":3,"sources":["App.js","index.js"],"names":["storiesReducer","state","action","type","isLoading","isError","data","payload","filter","story","objectID","Error","API_ENDPOINT","SearchForm","searchTerm","onSearchInput","onSearchSubmit","onSubmit","className","id","value","isFocused","onInputChange","disabled","InputWithLabel","children","inputRef","React","useRef","useEffect","current","focus","htmlFor","ref","autoFocus","onChange","List","list","onRemoveItem","map","item","Item","style","width","href","url","title","author","num_comments","points","onClick","App","key","initialState","useState","localStorage","getItem","setValue","setItem","useSemiPersistentState","setSearchTerm","setUrl","useReducer","stories","dispatchStories","handleFetchStories","useCallback","a","axios","get","result","hits","TYPE","event","target","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc56d6f7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nconst storiesReducer = (state, action) => {\n  switch (action.type) {\n    case \"STORIES_FETCH_INIT\":\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case \"STORIES_FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case \"STORIES_FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    case \"REMOVE_STORY\":\n      return {\n        ...state,\n        data: state.data.filter(\n          (story) => action.payload.objectID !== story.objectID\n        ),\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useSemiPersistentState = (key, initialState) => {\n  // INITIALLY THERE IS AN EMPTY STATE ('')\n  // HANDLECHANGE FUNCTION SETS THE EVENT VALUE = TO setSearchTerm\n  // BY DOING SO IT SETS searchTerm TO THE SAME VALUE\n  const [value, setValue] = React.useState(\n    localStorage.getItem(key) || initialState\n  );\n\n  // USEEFFECT HOOK TAKES TWO ARGUMENTS-- A FUNCTION WHERE THE SIDE-EFFECT\n  // TAKES PLACE (HERE THE SIDE-EFFECT IS WHEN SEARCH TERM IS SET IN BROWSERS\n  // LOCAL STORAGE), AND OPTIONAL SECONDARY ARGUMENT SAYING TO RUN THE FUNC\n  // EVERY TIME THE VALUE IN THE ARRAY CHANGES (HERE IT IS SEARCHTERM)\n  // HAVING AN EMPTY ARRAY MEANS THE FUNCTION FOR THE SIDE-EFFECT ONLY RUNS\n  // ONCE, WHEN THE COMPONENT RENDERS FOR THE FIRST TIME\n  React.useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [value, key]);\n\n  return [value, setValue];\n};\n\nconst API_ENDPOINT = \"https://hn.algolia.com/api/v1/search?query=\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useSemiPersistentState(\"search\", \"React\");\n\n  const [url, setUrl] = React.useState(`${API_ENDPOINT}${searchTerm}`);\n\n  const [stories, dispatchStories] = React.useReducer(storiesReducer, {\n    data: [],\n    isLoading: false,\n    isError: false,\n  });\n\n  const handleFetchStories = React.useCallback(async () => {\n    dispatchStories({ type: \"STORIES_FETCH_INIT\" });\n\n    try {\n      const result = await axios.get(url);\n\n      dispatchStories({\n        type: \"STORIES_FETCH_SUCCESS\",\n        payload: result.data.hits,\n      });\n    } catch {\n      dispatchStories({ TYPE: \"STORIES_FETCH_FAILURE\" });\n    }\n  }, [url]);\n\n  React.useEffect(() => {\n    handleFetchStories();\n  }, [handleFetchStories]);\n\n  const handleRemoveStory = (item) => {\n    dispatchStories({\n      type: \"REMOVE_STORY\",\n      payload: item,\n    });\n  };\n\n  // THIS IS A CALLBACK HANDLER-- THE SEARCH FEATURE WAS MADE A NEW Component\n  // BECAUSE IT IS A CHILD OF App, APP CANT SEE THE searchTerm\n  // THE CALLBACK FUNCTION IS WRITTEN IN APP, SENT TO SEARCH AS A PROP,\n  // THE EVENT IS PASSED BACK UP TO APP WHERE IT CAN BE USED\n  const handleSearchInput = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleSearchSubmit = (event) => {\n    setUrl(`${API_ENDPOINT}${searchTerm}`);\n\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"headline-primary\">HackerNews Story Search</h1>\n\n      <SearchForm\n        searchTerm={searchTerm}\n        onSearchInput={handleSearchInput}\n        onSearchSubmit={handleSearchSubmit}\n      />\n\n      {/* If isError is true the <p> will be displayed  */}\n      {stories.isError && <p>Something went wrong...</p>}\n\n      {stories.isLoading ? (\n        <p>Loading....</p>\n      ) : (\n        //* Pass stories array to List component w/ list prop\n        <List list={stories.data} onRemoveItem={handleRemoveStory} />\n      )}\n    </div>\n  );\n}\n\nconst SearchForm = ({ searchTerm, onSearchInput, onSearchSubmit }) => {\n  return (\n    <form onSubmit={onSearchSubmit} className=\"search-form\">\n      <InputWithLabel\n        id=\"search\"\n        value={searchTerm}\n        isFocused\n        onInputChange={onSearchInput}\n      >\n        <strong>Search: </strong>\n      </InputWithLabel>\n      <button\n        type=\"submit\"\n        disabled={!searchTerm}\n        className=\"button button_large\"\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n\nconst InputWithLabel = ({\n  id,\n  value,\n  type = \"text\",\n  onInputChange,\n  isFocused,\n  children,\n}) => {\n  const inputRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isFocused && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isFocused]);\n  return (\n    <>\n      <label htmlFor={id} className=\"label\">\n        {children}\n      </label>\n      &nbsp;\n      <input\n        ref={inputRef}\n        id={id}\n        type={type}\n        value={value}\n        autoFocus={isFocused}\n        onChange={onInputChange}\n        className=\"input\"\n      />\n    </>\n  );\n};\n\nconst List = ({ list, onRemoveItem }) =>\n  list.map((item) => (\n    <Item key={item.objectID} item={item} onRemoveItem={onRemoveItem} />\n  ));\n\nconst Item = ({ item, onRemoveItem }) => {\n  return (\n    <div className=\"item\">\n      <span style={{ width: \"40%\" }}>\n        <a href={item.url}>{item.title}</a>\n      </span>\n      <span style={{ width: \"30%\" }}>{item.author}</span>\n      <span style={{ width: \"10%\" }}>{item.num_comments}</span>\n      <span style={{ width: \"10%\" }}>{item.points}</span>\n      <span style={{ width: \"10%\" }}>\n        <button\n          className=\"button button_small\"\n          type=\"button\"\n          onClick={() => onRemoveItem(item)}\n        >\n          Dismiss\n        </button>\n      </span>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}